{"version":3,"sources":["assets/images/loading.gif","Redux/Const/TagTypes.js","Redux/Reducer/tag.js","Redux/Reducer/articles.js","Redux/Reducer/loading.js","Redux/Reducer/authentication.js","Redux/Reducer/slugArticle.js","Redux/Reducer/comment.js","Redux/Reducer/test.js","Redux/Reducer/index.js","Axios/index.js","Component/Login.js","Redux/Action/authentication.js","Component/NavPillChild.js","Redux/Action/articles.js","Component/NavPill.js","Component/PostingContent.js","Component/PostingOwner.js","Component/Tag.js","Component/Pagination.js","Component/Banner.js","Component/Body.js","Component/PostingDetail/Banner.js","Component/PostingDetail/Content.js","Component/PostingDetail/CommentOwner.js","Component/PostingDetail/TotalComment.js","Component/PostingDetail/index.js","Redux/Action/slugArticle.js","Redux/Action/comment.js","Component/BookStore/index.js","Component/Header.js","Component/Footer.js","Component/GlobalLoading/index.js","App.js","serviceWorker.js","Redux/Action/api.js","Redux/Action/apiGraphQL.js","Saga/index.js","Redux/Action/tag.js","Redux/Const/typeGraphQL.js","Redux/Action/loading.js","Redux/Action/test.js","index.js"],"names":["module","exports","STATUS_API","initialState","listTags","reducerTag","state","action","type","listArticles","count","tagNav","reducerArticle","tagName","statusLoading","reducerLoading","userName","email","token","statusAuthenFeature","statusNoneAuthenFeature","id","reducerAuthentication","console","log","slugArticle","reducerSlugArticle","article","listComments","reducerComment","listComment","tests","reducerTests","payload","rootReducer","combineReducers","Tags","Articles","reducerArtcles","Authen","ArticleSlug","reducerArticleSlug","Comments","ListTests","reducerTest","axios","create","baseURL","timeout","Login","dispatch","useDispatch","history","useHistory","useState","password","inforLogin","setInforLogin","useSelector","className","href","class","value","name","placeholder","onChange","e","target","onClick","sessionStorage","push","NavPillChild","props","role","data-toggle","aria-controls","aria-selected","actionLoadArticles","NavPill","PostingContent","title","description","tagList","url","slug","map","item","index","key","PostingOwner","date","src","alt","Tag","listTagsName","Pagination","i","get","params","limit","offset","then","res","actionsArticle","data","articles","articlesCount","catch","err","Banner","Body","author","username","createdAt","Array","fill","Title","content","taglist","CommentOwner","textComment","setTextComment","row","event","comment","TotalComment","body","status","setStatus","userAuthen","userAuthor","useEffect","style","display","idPost","PostingDetailSite","match","comments","statusFeatureComment","endpoint","Index","scope","Header","statusAuthen","statusNoneAuthen","to","exact","path","component","HomePage","render","PostingDetail","BookStore","Footer","GlobalLoading","xhtml","loadingImage","App","store","Boolean","window","location","hostname","getTag","getArticles","actionGetArticlesFollowTagName","tag","actionFetchhUser","post","user","actionFetchArticleSlug","actionFetchComment","actiondeleteComment","delete","headers","Authorization","actionPostComment","fetchListTests","query","manageTagActionAPI","manageArticlesActionAPI","getArticlesFollowTagName","getUserInformation","getArticleSlug","getComment","deleteComment","postComment","fecthListTestBookStore","manageAuthenFeature","manageListLoadActions","rootSaga","take","call","result","tagTypes","put","tags","setItem","delay","allTests","takeEvery","fork","sagaMiddleWare","createSagaMiddleWare","createStore","applyMiddleware","run","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.7a955528.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.5bc723f8.gif\";","//Status API (getting created, success or updated)\r\nexport const STATUS_API = {\r\n  SUCCESS: 200,\r\n  CREATED: 201,\r\n  UPDATED: 202,\r\n};\r\n// Action for get tags from API\r\nexport const LOAD_TAG = \"LOAD_TAG\";\r\nexport const FETCH_TAG = \"FETCH_TAG\";\r\n//ACtion for get articles from API\r\nexport const FETCH_ARTICLES = \"FETCH_ARTICLES\";\r\nexport const LOAD_ARTICLES = \"LOAD_ARTICLES\";\r\n// export const FETCH_TAG_NAV = \"FETCH_TAG_NAV\";\r\nexport const TAG_NAV = \"TAG_NAV\";\r\n//Action for testing redux-saga\r\nexport const SHOW_LOADING_ICON = \"SHOW_LOADING_ICON\";\r\nexport const HIDDEN_LOADING_ICON = \"HIDDEN_LOADING_ICON\";\r\n//Action for authentication\r\nexport const SAVE_AUTHENTICATION = \"SAVE_AUTHENTICATION\";\r\nexport const STATUS_BLOCK = \"STATUS_BLOCK\";\r\nexport const STATUS_NONE = \"STATUS_NONE\";\r\nexport const SIGN_IN = \"SIGN_IN\";\r\n//Action for user login\r\nexport const FETCH_USER_LOGIN = \"FETCH_USER_LOGIN\";\r\n//Action for features in posting detail\r\nexport const FETCH_SLUG = \"FETCH_SLUG\";\r\nexport const FETCH_SLUG_SUCCESS = \"FETCH_SLUG_SUCCESS\";\r\n//Action for fectch comment of posting detail\r\nexport const FETCH_COMMENT = \"FETCH_COMMENT\";\r\nexport const FETCH_COMMENT_SUCCESS = \"FETCH_COMMENT_SUCCESS\";\r\n// Action for compare author\r\nexport const COMPARE_AUTHOR = \"COMPARE_AUTHOR\";\r\n//ACtion for feature posting detail\r\nexport const SHOW_ICON_FEATURE_POSTING_DEATIL =\r\n  \"SHOW_ICON_FEATURE_POSTING_DEATIL\";\r\nexport const HIDDEN_ICON_FEATURE_POSTING_DEATIL =\r\n  \"HIDDEN_ICON_FEATURE_POSTING_DEATIL\";\r\nexport const SHOW_ICON_FEATURE_COMMENT = \"SHOW_ICON_FEATURE_COMMENT\";\r\nexport const HIDDEN_ICON_FEATURE_COMMENT = \"HIDDEN_ICON_FEATURE_COMMENT\";\r\nexport const DELETE_COMMENT = \"DELETE_COMMENT\";\r\nexport const POST_COMMENT = \"POST_COMMENT\";\r\n//Action for fetch data from Bookstore GraphQL API\r\nexport const FETCH_LIST_BOOKSTORE = \"FETCH_LIST_BOOKSTORE\";\r\nexport const FETCH_LIST_BOOKSTORE_SUCCESS = \"FETCH_LIST_BOOKSTORE_SUCCESS\";\r\n","import * as actionTypes from \"./../Const/TagTypes\";\r\n\r\nconst initialState = {\r\n  listTags: [],\r\n};\r\nconst reducerTag = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.LOAD_TAG:\r\n      return {\r\n        ...state,\r\n        listTags: action.listTags,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducerTag;\r\n","import * as actionTypes from \"./../Const/TagTypes\"\r\n\r\nconst initialState = {\r\n    listArticles: [], // List articles returned from API \r\n    count: 0,   // Total element of Articles array\r\n    tagNav: \"\" //Save name of tag which clicked by user\r\n}\r\nconst reducerArticle = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_ARTICLES: \r\n            //TODO: HERE\r\n            return {\r\n                ...state,\r\n                listArticles: action.listArticles,\r\n                count: action.count\r\n            }\r\n        case actionTypes.TAG_NAV:\r\n            return{\r\n                ...state,\r\n                tagNav: action.tagName\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default reducerArticle;","import * as actionsType from \"./../Const/TagTypes\"\r\n\r\nconst initialState = {\r\n    statusLoading: false\r\n}\r\nconst reducerLoading = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionsType.SHOW_LOADING_ICON:\r\n            return {\r\n                ...state,\r\n                statusLoading: true\r\n            }\r\n        case actionsType.HIDDEN_LOADING_ICON:\r\n            return {\r\n                ...state,\r\n                statusLoading: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default reducerLoading","import * as actionTypes from \"./../Const/TagTypes\";\r\n\r\nconst initialState = {\r\n  userName: \"\",\r\n  email: \"\",\r\n  token: \"\",\r\n  statusAuthenFeature: \"none\",\r\n  statusNoneAuthenFeature: \"block\",\r\n  id: 0,\r\n};\r\nconst reducerAuthentication = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SAVE_AUTHENTICATION:\r\n      const { userName, email, token, id } = action.action;\r\n      console.log(\"AUTHEN : \", action);\r\n      return {\r\n        ...state,\r\n        userName,\r\n        email,\r\n        token,\r\n        id,\r\n      };\r\n    case actionTypes.STATUS_BLOCK:\r\n      return {\r\n        ...state,\r\n        statusAuthenFeature: \"block\",\r\n        statusNoneAuthenFeature: \"none\",\r\n      };\r\n    case actionTypes.STATUS_NONE:\r\n      return {\r\n        ...state,\r\n        statusAuthenFeature: \"none\",\r\n        statusNoneAuthenFeature: \"block\",\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducerAuthentication;\r\n","import * as actionTypes from \"./../Const/TagTypes\";\r\n\r\nconst initialState = {\r\n  slugArticle: null,\r\n};\r\nconst reducerSlugArticle = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_SLUG_SUCCESS:\r\n      return {\r\n        ...state,\r\n        slugArticle: action.article,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducerSlugArticle;\r\n","import * as actionsType from \"./../Const/TagTypes\";\r\n\r\nconst initialState = {\r\n  listComments: null,\r\n};\r\nconst reducerComment = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionsType.FETCH_COMMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        listComments: action.listComment,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducerComment;\r\n","import * as actionTypes from \"./../Const/TagTypes\";\r\n\r\nconst initialState = {\r\n  tests: \"\",\r\n};\r\nconst reducerTests = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_LIST_BOOKSTORE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        tests: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducerTests;\r\n","import { combineReducers } from \"redux\";\r\nimport reducerTag from \"./tag\";\r\nimport reducerArtcles from \"./articles\";\r\nimport reducerLoading from \"./loading\";\r\nimport reducerAuthentication from \"./authentication\";\r\nimport reducerArticleSlug from \"./slugArticle\";\r\nimport reducerComment from \"./comment\";\r\nimport reducerTest from \"./test\";\r\n\r\nconst rootReducer = combineReducers({\r\n  Tags: reducerTag,\r\n  Articles: reducerArtcles,\r\n  statusLoading: reducerLoading,\r\n  Authen: reducerAuthentication,\r\n  ArticleSlug: reducerArticleSlug,\r\n  Comments: reducerComment,\r\n  ListTests: reducerTest,\r\n});\r\nexport default rootReducer;\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://conduit.productionready.io\",\r\n    timeout: 10000\r\n});","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionSignIn } from \"./../Redux/Action/authentication\";\r\nimport axios from \"./../Axios/index\";\r\n\r\nfunction Login() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [inforLogin, setInforLogin] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const onChangeUserName = (e) => {\r\n    setInforLogin({\r\n      ...inforLogin,\r\n      email: e.target.value,\r\n    });\r\n  };\r\n  const onChangePassword = (e) => {\r\n    setInforLogin({\r\n      ...inforLogin,\r\n      password: e.target.value,\r\n    });\r\n  };\r\n  const loginClick = () => {\r\n    dispatch(actionSignIn(inforLogin.email, inforLogin.password));\r\n    if (sessionStorage.userName) history.push(\"/HomePage\");\r\n  };\r\n\r\n  const token = useSelector((state) => state.Authen.token);\r\n  return (\r\n    <div className=\"container text-center login\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\"></div>\r\n        <div className=\"col-md-6\">\r\n          <h1>Sign in</h1>\r\n          <a href=\"a\" class=\"mb-3\">\r\n            Need an account?\r\n          </a>\r\n          <fieldset className=\"form-group\">\r\n            <input\r\n              className=\"form-control form-control-lg\"\r\n              value={inforLogin.email}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              onChange={onChangeUserName}\r\n            />\r\n            <br />\r\n            <input\r\n              className=\"form-control form-control-lg\"\r\n              value={inforLogin.password}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={onChangePassword}\r\n            />\r\n            <button\r\n              className=\"btn btn-lg btn-primary pull-xs-right mt-3\"\r\n              type=\"submit\"\r\n              onClick={loginClick}\r\n            >\r\n              Sign in\r\n            </button>\r\n          </fieldset>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Login;\r\n","import * as typeActions from \"./../Const/TagTypes\";\r\nexport const actionSaveValuesAuthen = (action) => {\r\n  return {\r\n    type: typeActions.SAVE_AUTHENTICATION,\r\n    action,\r\n  };\r\n};\r\n\r\nexport const actionDisplayNone = () => {\r\n  return {\r\n    type: typeActions.STATUS_NONE,\r\n  };\r\n};\r\nexport const actionSignIn = (email, password) => {\r\n  return {\r\n    type: typeActions.SIGN_IN,\r\n    payload: {\r\n      email,\r\n      password,\r\n    },\r\n  };\r\n};\r\n","import React from \"react\";\r\n\r\nfunction NavPillChild(props) {\r\n  return (\r\n    <li className=\"nav-item\" role=\"presentation\">\r\n      <a\r\n        className=\"nav-link\"\r\n        id=\"profile-tab\"\r\n        data-toggle=\"tab\"\r\n        href=\"#menu2\"\r\n        role=\"tab\"\r\n        aria-controls=\"profile\"\r\n        aria-selected=\"false\"\r\n      >\r\n        {props.tagNav}\r\n      </a>\r\n    </li>\r\n  );\r\n}\r\nexport default NavPillChild;\r\n","import * as actionTypes from \"../Const/TagTypes\";\r\n\r\nexport const actionFetchArticles = () => {\r\n  return {\r\n    type: actionTypes.FETCH_ARTICLES,\r\n  };\r\n};\r\nexport const actionLoadArticles = (listArticles, count) => {\r\n  return {\r\n    type: actionTypes.LOAD_ARTICLES,\r\n    listArticles,\r\n    count,\r\n  };\r\n};\r\nexport const actionTagNav = (tagName) => {\r\n  return {\r\n    type: actionTypes.TAG_NAV,\r\n    tagName,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport NavPillChild from \"./NavPillChild\";\r\nimport { actionFetchArticles } from \"./../Redux/Action/articles\";\r\n\r\nfunction NavPill() {\r\n  const state = useSelector((state) => state.Articles.tagNav);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n        <li className=\"nav-item\" role=\"presentation\">\r\n          <a\r\n            className=\"nav-link\"\r\n            data-toggle=\"tab\"\r\n            href=\"/\"\r\n            role=\"tab\"\r\n            aria-controls=\"home\"\r\n            aria-selected=\"true\"\r\n            onClick={() => {\r\n              dispatch(actionFetchArticles());\r\n            }}\r\n          >\r\n            Global Feed\r\n          </a>\r\n        </li>\r\n        {<NavPillChild tagNav={state} />}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nexport default NavPill;\r\n","import React from \"react\";\r\n\r\nfunction PostingContent(props) {\r\n  const { title, description, tagList, slug } = props;\r\n  const url = \"/PostingDetail/\" + slug;\r\n  return (\r\n    <div>\r\n      <a href={url}>\r\n        <h3 className=\"color-title-posting\">{title}</h3>\r\n        <p>{description}</p>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <p>Read more ...</p>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <ul className=\"tag-list\">\r\n              {tagList.map((item, index) => (\r\n                <li key={index}>{item}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\nexport default PostingContent;\r\n","import React from \"react\";\r\n\r\nfunction PostingOwner(props) {\r\n  //Method pass data to parent component\r\n  // const sendData = () =>{\r\n  //     props.parentCallback(\"Minh Ti in your area\")\r\n  // }\r\n  const { userName, date } = props;\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-4\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-2\">\r\n            <a href=\"#\">\r\n              <img\r\n                src=\"https://static.productionready.io/images/smiley-cyrus.jpg\"\r\n                className=\"avatar\"\r\n                alt=\"ava_image\"\r\n              />\r\n            </a>\r\n          </div>\r\n          <div className=\"col-md-10\">\r\n            <a href=\"a.com\" className=\"font-color-green\">\r\n              {userName}\r\n            </a>\r\n            <p className=\"date\">{date}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-8 text-right\">\r\n        <button className=\"icon-heart\">\r\n          <i className=\"far fa-heart\" />\r\n          <span>0</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default PostingOwner;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { actionTagNav } from \"./../Redux/Action/articles\";\r\n\r\nconst Tag = () => {\r\n  const listTagsName = useSelector((state) => state.Tags.listTags);\r\n  const dispatch = useDispatch();\r\n  const passTag = (tag) => {\r\n    dispatch(actionTagNav(tag.item));\r\n  };\r\n  return (\r\n    <div className=\"col-md-3 background-color-gray tag\">\r\n      <p>Popular tags</p>\r\n      {listTagsName.map((item, index) => (\r\n        <button className=\"btn\" onClick={() => passTag({ item })} key={index}>\r\n          {item}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Tag;\r\n","import React from 'react'\r\nimport axios from './../Axios/index'\r\nimport {useDispatch} from 'react-redux'\r\nimport * as actionsArticle from './../Redux/Action/articles'\r\n\r\n\r\nexport default function Pagination(props) {\r\n    const {index} = props;\r\n    const dispatch = useDispatch();\r\n    const handlePagination = (i) => {  \r\n        console.log(\"i= \", i)\r\n        axios\r\n        .get(\"/api/articles\", {\r\n            params:{\r\n                limit: 10,\r\n                offset: i*10\r\n            }\r\n        })\r\n        .then(res => {\r\n            dispatch(actionsArticle.actionLoadArticles(res.data.articles, res.data.articlesCount))\r\n        })\r\n        .catch(err =>{\r\n            console.log(\"Error handle Pagination\", err)\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <li className=\"page-item\" key={index}>\r\n                {/* <a href=\"#\" onClick={()=>handlePagination({ index })} className=\"page-link\">{index + 1}</a> */}\r\n                <button className=\"btn page-link\" onClick={() => handlePagination( index )}>{ index + 1 }</button>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Banner() {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12 text-center text-white background-color-green\">\r\n                <p className=\"font-title\">conduit</p>\r\n                <p className=\"title-slogan\">A place to share knowledge.</p>\r\n            </div>\r\n        </div>\r\n        )\r\n}\r\nexport default Banner","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport NavPill from \"./NavPill\";\r\nimport PostingContent from \"./PostingContent\";\r\nimport PostingOwner from \"./PostingOwner\";\r\nimport Tag from \"./Tag\";\r\nimport Pagination from \"./Pagination\";\r\nimport Banner from \"./Banner\";\r\n\r\nexport function Body() {\r\n  const listArticles = useSelector((state) => state.Articles.listArticles);\r\n  const articlesCount = useSelector((state) => state.Articles.count);\r\n  //method return data from child component\r\n  // const callBackFunction =(childData) =>{\r\n  //   console.log(childData)\r\n  // }\r\n  return (\r\n    <div>\r\n      <Banner />\r\n      <div className=\"container mb-150\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-9 mt-5 tab-content\" id=\"myTabContent\">\r\n            <NavPill />\r\n            {listArticles.map((item, index) => (\r\n              <div className=\"article-privew\" key={index}>\r\n                <PostingOwner\r\n                  userName={item.author.username}\r\n                  date={item.createdAt}\r\n                  // parentCallback={callBackFunction}\r\n                />\r\n                <PostingContent\r\n                  title={item.title}\r\n                  description={item.description}\r\n                  tagList={item.tagList}\r\n                  slug={item.slug}\r\n                />\r\n              </div>\r\n            ))}\r\n            <ul className=\"Pagination\">\r\n              {Array(articlesCount / 10)\r\n                .fill(1)\r\n                .map((item, index) => (\r\n                  <Pagination index={index} />\r\n                ))}\r\n            </ul>\r\n          </div>\r\n          <Tag />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Body;\r\n","import React from \"react\";\r\n\r\nfunction Banner(props) {\r\n  const { title, date, username } = props;\r\n  return (\r\n    <div className=\"article-meta banner-detail-posting\">\r\n      <div className=\"container\">\r\n        <h1>{title}</h1>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-2\">\r\n                <a href=\"/\">\r\n                  <img\r\n                    src=\"https://static.productionready.io/images/smiley-cyrus.jpg\"\r\n                    className=\"avatar\"\r\n                    alt=\"ava\"\r\n                  />\r\n                </a>\r\n              </div>\r\n              <div className=\"col-md-10\">\r\n                <a href=\"/\" className=\"font-color-green\">\r\n                  {username}\r\n                </a>\r\n                <p className=\"date\"> {date} </p>\r\n                <button className=\"btn btn-dark\">Edit Article</button>\r\n                <button className=\"btn btn-warning\">Delete Article</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React from \"react\";\r\n\r\nfunction Title(props) {\r\n  const { content, taglist } = props;\r\n  return (\r\n    <div className=\"row mt-5 mb-5 border-bottom\">\r\n      <p className=\"content-detail-posting mb-5\"> {content} </p>\r\n      <div className=\"col-md-12 clear-fix\">\r\n        <ul className=\"tag-list float-left\">\r\n          {taglist.map((item, index) => (\r\n            <li key={index}>{item}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as typeActions from \"./../../Redux/Const/TagTypes\";\r\n\r\nfunction CommentOwner(props) {\r\n  const dispatch = useDispatch();\r\n  const [textComment, setTextComment] = useState(\"\");\r\n  const handleOnChange = (event) => {\r\n    setTextComment(event.target.value);\r\n  };\r\n  const handleOnClick = () => {\r\n    dispatch({\r\n      type: typeActions.POST_COMMENT,\r\n      payload: {\r\n        slug: props.slug,\r\n        comment: textComment,\r\n        token: sessionStorage.token,\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"card comment-form\">\r\n      <div className=\"card-block\">\r\n        <textarea\r\n          className=\"form-control form-comment\"\r\n          row=\"3\"\r\n          placeholder=\"Writte a comment ...\"\r\n          onChange={handleOnChange}\r\n        ></textarea>\r\n      </div>\r\n      <div className=\"card-footer\">\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          type=\"submit\"\r\n          onClick={handleOnClick}\r\n        >\r\n          Post comment\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommentOwner;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as typeActions from \"./../../Redux/Const/TagTypes\";\r\n\r\nfunction TotalComment(props) {\r\n  const dispatch = useDispatch();\r\n  const { author, body, createdAt } = props.item;\r\n  const [status, setStatus] = useState(\"none\");\r\n  const userAuthen = sessionStorage.userName;\r\n  const userAuthor = author.username;\r\n  useEffect(() => {\r\n    if (userAuthen === userAuthor) setStatus(\"block\");\r\n  }, []);\r\n\r\n  const deleteComment = () => {\r\n    dispatch({\r\n      type: typeActions.DELETE_COMMENT,\r\n      payload: {\r\n        slug: props.slug,\r\n        idPost: props.item.id,\r\n        token: sessionStorage.token,\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"card\">\r\n        <div className=\"card-block\">\r\n          <p className=\"card-text\"> {body} </p>\r\n        </div>\r\n        <div className=\"card-footer\">\r\n          <a href=\"/\">\r\n            <img\r\n              src=\"https://static.productionready.io/images/smiley-cyrus.jpg\"\r\n              className=\"avatar\"\r\n              alt=\"ava\"\r\n            />\r\n          </a>\r\n          <a href=\"/\" className=\"comment-author ml-2\">\r\n            {author.username}\r\n          </a>\r\n          <span className=\"date-posted ml-2\"> {createdAt} </span>\r\n          <span className=\"mod-options text-right\">\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              style={{ display: status }}\r\n              onClick={deleteComment}\r\n            >\r\n              delete\r\n            </button>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TotalComment;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Banner from \"./Banner\";\r\nimport Title from \"./Content\";\r\nimport CommentOwner from \"./CommentOwner\";\r\nimport TotalComment from \"./TotalComment\";\r\nimport { actionFetchSlug } from \"./../../Redux/Action/slugArticle\";\r\nimport { actionFectchComment } from \"./../../Redux/Action/comment\";\r\n\r\nfunction PostingDetailSite(props) {\r\n  const { slug } = props.match.params;\r\n  const dispatch = useDispatch();\r\n  const article = useSelector((state) => state.ArticleSlug.slugArticle);\r\n  const comments = useSelector((state) => state.Comments.listComments);\r\n  const statusFeatureComment = sessionStorage.userName ? \"block\" : \"none\";\r\n  // console.log(\"POSTING DETAIL SITE : \", props.match);\r\n  useEffect(() => {\r\n    dispatch(actionFetchSlug(slug));\r\n    dispatch(actionFectchComment(slug));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {article && (\r\n        <Banner\r\n          title={article.title}\r\n          username={article.author.username}\r\n          date={article.createdAt}\r\n        />\r\n      )}\r\n      <div className=\"container mb-150\">\r\n        {article && <Title content={article.body} taglist={article.tagList} />}\r\n        <div className=\"row\">\r\n          <div className=\"offset-md-2 col-md-8\">\r\n            {/* Posting comment */}\r\n            <div style={{ display: statusFeatureComment }}>\r\n              <CommentOwner slug={slug} />\r\n            </div>\r\n\r\n            {/* all comment */}\r\n            {comments &&\r\n              comments.map((item, index) => (\r\n                <div key={index}>\r\n                  <TotalComment item={item} slug={slug} />\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostingDetailSite;\r\n","import * as actionTypes from \"../Const/TagTypes\";\r\n\r\nexport const actionFetchSlug = (url) => {\r\n  return {\r\n    type: actionTypes.FETCH_SLUG,\r\n    url,\r\n  };\r\n};\r\nexport const actionSuccessFetchSlug = (article) => {\r\n  return {\r\n    type: actionTypes.FETCH_SLUG_SUCCESS,\r\n    article,\r\n  };\r\n};\r\n","import * as typeActions from \"./../Const/TagTypes\";\r\n\r\nexport const actionFectchComment = (endpoint) => {\r\n  return {\r\n    type: typeActions.FETCH_COMMENT,\r\n    payload: {\r\n      endpoint,\r\n    },\r\n  };\r\n};\r\nexport const actionFetchCommentSuccess = (listComment) => {\r\n  return {\r\n    type: typeActions.FETCH_COMMENT_SUCCESS,\r\n    listComment,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Index() {\r\n  const tests = useSelector((state) => state.ListTests.tests);\r\n  console.log(\"DELAY USESELECTOR\", tests);\r\n  return (\r\n    <div>\r\n      <table class=\"table\">\r\n        <thead class=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">ID</th>\r\n            <th scope=\"col\">Name</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tests.map((item, index) => (\r\n            <tr key={index}>\r\n              <th scope=\"row\">{item.id}</th>\r\n              <td>{item.name}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\nimport HomePage from \"./Body\";\r\nimport PostingDetail from \"./PostingDetail/index\";\r\nimport BookStore from \"./BookStore/index\";\r\n\r\nfunction Header() {\r\n  const statusAuthen = useSelector((state) => state.Authen.statusAuthenFeature);\r\n  const statusNoneAuthen = useSelector(\r\n    (state) => state.Authen.statusNoneAuthenFeature\r\n  );\r\n  const userName = useSelector((state) => state.Authen.userName);\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-9\">\r\n            <a href=\"/HomePage\" className=\"font-color-green conduit-text\">\r\n              conduit\r\n            </a>\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <nav className=\"navbar navbar-inverse\">\r\n              <ul className=\"nav navbar-nav\">\r\n                <li style={{ display: \"block\" }}>\r\n                  <NavLink to=\"/HomePage\">Home</NavLink>\r\n                </li>\r\n                <li style={{ display: statusNoneAuthen }}>\r\n                  <NavLink to=\"/SignIn\">Sign in</NavLink>\r\n                </li>\r\n                <li style={{ display: statusNoneAuthen }}>\r\n                  <NavLink to=\"/SignUp\">Sign up</NavLink>\r\n                </li>\r\n                <li style={{ display: statusAuthen }}>\r\n                  <NavLink to=\"/NewPost\">New Post</NavLink>\r\n                </li>\r\n                <li style={{ display: statusAuthen }}>\r\n                  <NavLink to=\"/Setting\">Setting</NavLink>\r\n                </li>\r\n                <li style={{ display: statusAuthen }}>\r\n                  <NavLink to=\"/userName\">{userName}</NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink exact to=\"/BookStore\">\r\n                    Book store\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n        <Route path=\"/SignIn\">\r\n          <Login />\r\n        </Route>\r\n        <Route path=\"/HomePage\" component={HomePage} />\r\n        <Route\r\n          exact\r\n          path=\"/PostingDetail/:slug\"\r\n          render={(props) => {\r\n            return <PostingDetail {...props} />;\r\n          }}\r\n        />\r\n        <Route path=\"/BookStore\" component={BookStore} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12 footer\">\r\n        <a href=\"/\">\r\n          <i className=\"fab fa-github\" />\r\n          <span>Fork on GitHub</span>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport loadingImage from \"./../../assets/images/loading.gif\";\r\n\r\nfunction GlobalLoading(props) {\r\n  const statusLoading = useSelector(\r\n    (state) => state.statusLoading.statusLoading\r\n  );\r\n  let xhtml = null;\r\n  if (statusLoading)\r\n    xhtml = (\r\n      <div className=\"backgorund-loading\">\r\n        <img src={loadingImage} className=\"icon-loading \" alt=\"loadingImage\" />\r\n      </div>\r\n    );\r\n  return xhtml;\r\n}\r\n\r\nexport default GlobalLoading;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Header from \"./Component/Header\";\r\nimport Footer from \"./Component/Footer\";\r\nimport * as typeActions from \"./Redux/Const/TagTypes\";\r\nimport * as typeGraphQL from \"./Redux/Const/TagTypes\";\r\nimport { actionFetchArticles } from \"./Redux/Action/articles\";\r\nimport GlobalLoanding from \"./Component/GlobalLoading/index\";\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: typeActions.FETCH_TAG,\r\n    });\r\n    dispatch(actionFetchArticles());\r\n    dispatch({\r\n      type: typeActions.FETCH_LIST_BOOKSTORE,\r\n    });\r\n  }, []);\r\n\r\n  // const query = `\r\n  // query {\r\n  //   allTests {\r\n  //     name\r\n  //     id\r\n  //   }\r\n  // }`;\r\n  // const getAllTests = async () => {\r\n  //   await axios\r\n  //     .post(\"http://localhost:3000/admin/api\", {\r\n  //       query,\r\n  //     })\r\n  //     .then((res) => console.log(\"ALL_TEST : \", res))\r\n  //     .catch((err) => console.log(\"KEYSTONE API EROOR : \", err));\r\n  // };\r\n  // getAllTests();\r\n\r\n  const store = useSelector((state) => state);\r\n  console.log(\"Selector Store: \", store);\r\n  return (\r\n    <div>\r\n      <div className=\"container-fluid\">\r\n        <Header />\r\n        <Footer />\r\n      </div>\r\n      <GlobalLoanding />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from \"./../../Axios/index\";\r\n\r\nexport const getTag = () => {\r\n  return axios.get(\"/api/tags\");\r\n};\r\nexport const getArticles = () => {\r\n  return axios.get(\"/api/articles\", {\r\n    params: {\r\n      limit: 10,\r\n    },\r\n  });\r\n};\r\n\r\nexport const actionGetArticlesFollowTagName = (tagName) => {\r\n  return axios.get(\"/api/articles\", {\r\n    params: {\r\n      limit: 10,\r\n      tag: tagName,\r\n    },\r\n  });\r\n};\r\nexport const actionFetchhUser = (email, password) => {\r\n  return axios.post(\"/api/users/login\", {\r\n    user: {\r\n      email,\r\n      password,\r\n    },\r\n  });\r\n};\r\nexport const actionFetchArticleSlug = (endpoint) => {\r\n  let url = \"/api/articles/\" + endpoint;\r\n  return axios.get(url);\r\n};\r\nexport const actionFetchComment = (endpoint) => {\r\n  let url = \"/api/articles/\" + endpoint + \"/comments\";\r\n  return axios.get(url);\r\n};\r\nexport const actiondeleteComment = (payload) => {\r\n  const { slug, idPost, token } = payload;\r\n  return axios.delete(\"/api/articles/\" + slug + \"/comments/\" + idPost, {\r\n    headers: {\r\n      Authorization: \"Token \" + token,\r\n    },\r\n  });\r\n};\r\nexport const actionPostComment = (payload) => {\r\n  const { slug, comment, token } = payload;\r\n  return axios.post(\r\n    \"/api/articles/\" + slug + \"/comments\",\r\n    {\r\n      comment: {\r\n        body: comment,\r\n      },\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: \" Token \" + token,\r\n      },\r\n    }\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"http://localhost:3000/admin/api\";\r\nexport const fetchListTests = (query) => {\r\n  return axios.post(baseUrl, {\r\n    query,\r\n  });\r\n};\r\n","import {\r\n  fork,\r\n  take,\r\n  call,\r\n  put,\r\n  delay,\r\n  all,\r\n  takeLatest,\r\n  takeEvery,\r\n} from \"redux-saga/effects\";\r\nimport * as tagTypes from \"./../Redux/Const/TagTypes\";\r\nimport {\r\n  actionShowLoading,\r\n  actionHiddenLoading,\r\n} from \"./../Redux/Action/loading\";\r\nimport {\r\n  actionDisplayNone,\r\n  actionSaveValuesAuthen,\r\n} from \"./../Redux/Action/authentication\";\r\nimport {\r\n  getTag,\r\n  getArticles,\r\n  actionGetArticlesFollowTagName,\r\n  actionFetchhUser,\r\n  actionFetchArticleSlug,\r\n  actionFetchComment,\r\n  actiondeleteComment,\r\n  actionPostComment,\r\n} from \"./../Redux/Action/api\";\r\nimport { loadTag } from \"./../Redux/Action/tag\";\r\nimport { actionLoadArticles } from \"./../Redux/Action/articles\";\r\nimport { actionSuccessFetchSlug } from \"./../Redux/Action/slugArticle\";\r\nimport { actionFetchCommentSuccess } from \"./../Redux/Action/comment\";\r\nimport { fetchListTests } from \"./../Redux/Action/apiGraphQL\";\r\nimport * as typeQueryGraphQL from \"./../Redux/Const/typeGraphQL\";\r\nimport { successFetchListTests } from \"./../Redux/Action/test\";\r\n\r\nfunction* manageTagActionAPI() {\r\n  yield take(tagTypes.FETCH_TAG);\r\n  const result = yield call(getTag);\r\n  if (result.status === tagTypes.STATUS_API.SUCCESS)\r\n    yield put(loadTag(result.data.tags));\r\n  else yield console.log(\"Failed get tag from API\");\r\n}\r\n\r\nfunction* manageArticlesActionAPI() {\r\n  yield take(tagTypes.FETCH_ARTICLES);\r\n  const result = yield call(getArticles);\r\n  const { articles, articlesCount } = result.data;\r\n  if (result.status === tagTypes.STATUS_API.SUCCESS)\r\n    yield put(actionLoadArticles(articles, articlesCount));\r\n  else yield console.log(\"Failed get Articels from API\");\r\n}\r\nfunction* getArticlesFollowTagName(key) {\r\n  const result = yield call(actionGetArticlesFollowTagName, key.tagName);\r\n  if (result.status === tagTypes.STATUS_API.SUCCESS) {\r\n    const { articles, articlesCount } = result.data;\r\n    yield put(actionLoadArticles(articles, articlesCount));\r\n  } else yield console.log(\"FAILED GET_ARTICLES_FOLLOW_TAG_NAME\");\r\n}\r\nfunction* getUserInformation({ payload }) {\r\n  const result = yield call(actionFetchhUser, payload.email, payload.password);\r\n  if (result.status === tagTypes.STATUS_API.SUCCESS) {\r\n    const { id, username, email, token } = result.data.user;\r\n    sessionStorage.setItem(\"userName\", username);\r\n    sessionStorage.setItem(\"token\", token);\r\n    const payload = { id, username, email, token };\r\n    yield put(actionSaveValuesAuthen(payload));\r\n  } else yield console.log(\"FAILED FECTCH USER\");\r\n}\r\n\r\n// Lấy articles theo slug\r\nfunction* getArticleSlug(payload) {\r\n  const result = yield call(actionFetchArticleSlug, payload.url);\r\n  if (result.status === tagTypes.STATUS_API.SUCCESS) {\r\n    yield put(actionSuccessFetchSlug(result.data.article));\r\n  } else yield console.log(\"FAILED GET_ARTICLES_FOLLOW_TAG_NAME\");\r\n}\r\n// Lấy comment của từng bài viết\r\nfunction* getComment({ payload }) {\r\n  const result = yield call(actionFetchComment, payload.endpoint);\r\n  if (result.status === tagTypes.STATUS_API.SUCCESS)\r\n    yield put(actionFetchCommentSuccess(result.data.comments));\r\n  else console.log(\"FECTCH_COMMENT_FAILED\");\r\n}\r\n// Xóa comment của 1 bài post\r\nfunction* deleteComment({ payload }) {\r\n  const result = yield call(actiondeleteComment, payload);\r\n  if (result.status !== tagTypes.STATUS_API.SUCCESS)\r\n    console.log(\"DELETE_FAILED\");\r\n  else console.log(\"DELETE_SUCCESS\");\r\n}\r\n//Đăng một comment\r\nfunction* postComment({ payload }) {\r\n  const result = yield call(actionPostComment, payload);\r\n  if (result.status === tagTypes.STATUS_API.SUCCESS)\r\n    console.log(\"POST_SUCCESS\");\r\n  else console.log(\"POST_FAILED\");\r\n}\r\n// Lấy data list Test thông qua GraphQL\r\nfunction* fecthListTestBookStore() {\r\n  const result = yield call(\r\n    fetchListTests,\r\n    typeQueryGraphQL.QUERY_GET_ALL_TESTS\r\n  );\r\n  yield put(actionShowLoading());\r\n  yield delay(500);\r\n  yield put(actionHiddenLoading());\r\n  if (result.status === tagTypes.STATUS_API.SUCCESS)\r\n    yield put(successFetchListTests(result.data.data.allTests));\r\n  else console.log(\"FAILED FETCH LIST TESTS\");\r\n}\r\nfunction* manageAuthenFeature() {\r\n  yield take(tagTypes.SAVE_AUTHENTICATION);\r\n  yield put(() => {\r\n    return {\r\n      type: tagTypes.STATUS_BLOCK,\r\n    };\r\n  });\r\n}\r\nfunction* manageListLoadActions() {\r\n  while (true) {\r\n    yield take(tagTypes.TAG_NAV);\r\n    yield put(actionShowLoading());\r\n    yield delay(1000);\r\n    yield put(actionHiddenLoading());\r\n  }\r\n}\r\n// function* signIn({ payload }){\r\n//     yield delay(500)\r\n\r\n//     yield console.log(\"SIGN_IN\", payload.name)\r\n//     yield put(actionSaveValuesAuthen())\r\n// }\r\nexport default function* rootSaga() {\r\n  yield takeEvery(tagTypes.TAG_NAV, getArticlesFollowTagName);\r\n  yield takeEvery(tagTypes.SIGN_IN, getUserInformation);\r\n  yield takeEvery(tagTypes.FETCH_SLUG, getArticleSlug);\r\n  yield takeEvery(tagTypes.FETCH_COMMENT, getComment);\r\n  yield takeEvery(tagTypes.DELETE_COMMENT, deleteComment);\r\n  yield takeEvery(tagTypes.POST_COMMENT, postComment);\r\n  yield takeEvery(tagTypes.FETCH_LIST_BOOKSTORE, fecthListTestBookStore);\r\n  yield fork(manageTagActionAPI);\r\n  yield fork(manageArticlesActionAPI);\r\n  yield fork(manageListLoadActions);\r\n  yield fork(manageAuthenFeature);\r\n}\r\n","import * as actionTypes from \"../Const/TagTypes\";\r\nexport const loadTag = (listTags) => {\r\n  return {\r\n    type: actionTypes.LOAD_TAG,\r\n    listTags,\r\n  };\r\n};\r\n","export const QUERY_GET_ALL_TESTS = `\r\nquery {\r\n  allTests {\r\n    name\r\n    id\r\n  }\r\n}`;\r\n","import * as actionTypes from \"../Const/TagTypes\"\r\n\r\nexport const actionShowLoading = () =>{\r\n    return {\r\n        type: actionTypes.SHOW_LOADING_ICON\r\n    }\r\n}\r\nexport const actionHiddenLoading = () =>{\r\n    return {\r\n        type: actionTypes.HIDDEN_LOADING_ICON\r\n    }\r\n}\r\n","import * as typeActions from \"./../Const/TagTypes\";\r\n\r\nexport const successFetchListTests = (payload) => {\r\n  return {\r\n    type: typeActions.FETCH_LIST_BOOKSTORE_SUCCESS,\r\n    payload,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleWare from \"redux-saga\";\r\n\r\nimport rootReducer from \"./Redux/Reducer/index\";\r\nimport App from \"./App\";\r\nimport \"./Style/style.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport rootSaga from \"./Saga/index\";\r\n\r\nconst sagaMiddleWare = createSagaMiddleWare();\r\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleWare));\r\nsagaMiddleWare.run(rootSaga);\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}